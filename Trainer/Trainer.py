import random
from PyQt5.QtGui import QDoubleValidator
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_dashboard(object):
    def setupUi(self, dashboard):
        dashboard.setObjectName("dashboard")
        dashboard.setEnabled(True)
        dashboard.resize(800, 520)
        dashboard.setMinimumSize(QtCore.QSize(800, 520))
        dashboard.setMaximumSize(QtCore.QSize(800, 520))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(253, 255, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 255, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(253, 255, 133))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        dashboard.setPalette(palette)
        dashboard.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("s1200.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        dashboard.setWindowIcon(icon)
        dashboard.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(dashboard)
        self.centralwidget.setObjectName("centralwidget")
        self.task = QtWidgets.QLabel(self.centralwidget)
        self.task.setGeometry(QtCore.QRect(0, 90, 801, 91))
        font = QtGui.QFont()
        font.setPointSize(48)
        self.task.setFont(font)
        self.task.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.task.setFrameShadow(QtWidgets.QFrame.Plain)
        self.task.setLineWidth(1)
        self.task.setTextFormat(QtCore.Qt.RichText)
        self.task.setAlignment(QtCore.Qt.AlignCenter)
        self.task.setIndent(4)
        self.task.setObjectName("task")
        self.answer = QtWidgets.QLineEdit(self.centralwidget)
        self.answer.setGeometry(QtCore.QRect(80, 210, 621, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.answer.setFont(font)
        self.answer.setObjectName("answer")
        self.OK = QtWidgets.QPushButton(self.centralwidget)
        self.OK.setGeometry(QtCore.QRect(140, 260, 201, 61))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.OK.setFont(font)
        self.OK.setObjectName("OK")
        self.Next = QtWidgets.QPushButton(self.centralwidget)
        self.Next.setEnabled(False)
        self.Next.setGeometry(QtCore.QRect(430, 260, 191, 61))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Next.setFont(font)
        self.Next.setObjectName("Next")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(310, 350, 161, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setText("")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.image = QtWidgets.QLabel(self.centralwidget)
        self.image.setGeometry(QtCore.QRect(360, 270, 51, 51))
        self.image.setMaximumSize(QtCore.QSize(100, 100))
        self.image.setText("")
        self.image.setAlignment(QtCore.Qt.AlignCenter)
        self.image.setObjectName("image")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(270, 400, 241, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(270, 340, 241, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verno = QtWidgets.QLabel(self.centralwidget)
        self.verno.setGeometry(QtCore.QRect(290, 430, 181, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.verno.setFont(font)
        self.verno.setObjectName("verno")
        self.true1 = QtWidgets.QLabel(self.centralwidget)
        self.true1.setGeometry(QtCore.QRect(480, 440, 31, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 170, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.true1.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.true1.setFont(font)
        self.true1.setObjectName("true1")
        self.subtraction = QtWidgets.QPushButton(self.centralwidget)
        self.subtraction.setGeometry(QtCore.QRect(220, 10, 171, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.subtraction.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.subtraction.setFont(font)
        self.subtraction.setStyleSheet("")
        self.subtraction.setObjectName("subtraction")
        self.multiplication = QtWidgets.QPushButton(self.centralwidget)
        self.multiplication.setGeometry(QtCore.QRect(410, 10, 171, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.multiplication.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.multiplication.setFont(font)
        self.multiplication.setStyleSheet("")
        self.multiplication.setObjectName("multiplication")
        self.division = QtWidgets.QPushButton(self.centralwidget)
        self.division.setGeometry(QtCore.QRect(600, 10, 171, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.division.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.division.setFont(font)
        self.division.setStyleSheet("")
        self.division.setObjectName("division")
        self.addition = QtWidgets.QPushButton(self.centralwidget)
        self.addition.setGeometry(QtCore.QRect(30, 10, 171, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.addition.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.addition.setFont(font)
        self.addition.setStyleSheet("")
        self.addition.setObjectName("addition")
        self.image.raise_()
        self.task.raise_()
        self.answer.raise_()
        self.OK.raise_()
        self.Next.raise_()
        self.label.raise_()
        self.line.raise_()
        self.line_2.raise_()
        self.verno.raise_()
        self.true1.raise_()
        dashboard.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(dashboard)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        dashboard.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(dashboard)
        self.statusbar.setObjectName("statusbar")
        dashboard.setStatusBar(self.statusbar)

        self.retranslateUi(dashboard)
        QtCore.QMetaObject.connectSlotsByName(dashboard)

        self.answer.setValidator(QDoubleValidator(0, 2000, 2))
        self.OK.setDisabled(True)
        self.answer.setDisabled(False)
        self.answer.textChanged.connect(len_change)
        self.Next.clicked.connect(on_click_next)
        self.OK.clicked.connect(on_click_ok)
        self.addition.clicked.connect(addition)
        self.addition.clicked.connect(clear)
        self.subtraction.clicked.connect(subtraction)
        self.subtraction.clicked.connect(clear)
        self.division.clicked.connect(division)
        self.division.clicked.connect(clear)
        self.multiplication.clicked.connect(multiplication)
        self.multiplication.clicked.connect(clear)
        addition()

    def retranslateUi(self, dashboard):
        _translate = QtCore.QCoreApplication.translate
        dashboard.setWindowTitle(_translate("dashboard", "Trainer"))
        self.task.setText(_translate("dashboard", "Hi"))
        self.OK.setText(_translate("dashboard", "Ответить"))
        self.Next.setText(_translate("dashboard", "Следующий"))
        self.verno.setText(_translate("dashboard", "Решено примеров:"))
        self.true1.setText(_translate("dashboard", "0"))
        self.subtraction.setText(_translate("dashboard", "Вычитание"))
        self.multiplication.setText(_translate("dashboard", "Умножение"))
        self.division.setText(_translate("dashboard", "Деление"))
        self.addition.setText(_translate("dashboard", "Сложение"))


def qwerty():
    X = 3
    Z = (str(X))
    return Z

def len_change():
    if len(ui.answer.text()) > 0:
        ui.OK.setDisabled(False)
    else:
        ui.OK.setDisabled(True)


def addition():
    r1 = int(2)
    r2 = int(100)
    a = int(random.uniform(r1, r2))
    b = int(random.uniform(r1, r2))
    task = (str(a) + " + " + str(b) + "=?")
    ui.task.setText(str(task))
    global c
    c = int(a + b)
    c = str(c)
    ui.answer.setDisabled(False)
    ui.Next.setEnabled(False)
    ui.label.setText(' ')
    ui.addition.setStyleSheet("background-color:green")
    ui.subtraction.setStyleSheet("background-color:lightgreen")
    ui.multiplication.setStyleSheet("background-color:lightgreen")
    ui.division.setStyleSheet("background-color:lightgreen")
    ui.addition.setDisabled(True)
    ui.subtraction.setDisabled(False)
    ui.multiplication.setDisabled(False)
    ui.division.setDisabled(False)
    return int(c)


def subtraction():
    r1 = int(2)
    r2 = int(100)
    a = int(random.uniform(r1, r2))
    b = int(random.uniform(r1, a))
    task = (str(a) + " - " + str(b) + "=?")
    ui.task.setText(str(task))
    global c
    c = int(a - b)
    c = str(c)
    ui.answer.setDisabled(False)
    ui.Next.setEnabled(False)
    ui.label.setText(' ')
    ui.addition.setStyleSheet("background-color:lightgreen")
    ui.subtraction.setStyleSheet("background-color:green")
    ui.multiplication.setStyleSheet("background-color:lightgreen")
    ui.division.setStyleSheet("background-color:lightgreen")
    ui.addition.setDisabled(False)
    ui.subtraction.setDisabled(True)
    ui.multiplication.setDisabled(False)
    ui.division.setDisabled(False)
    return int(c)


def multiplication():
    r1 = int(2)
    r2 = int(10)
    a = int(random.uniform(r1, r2))
    b = int(random.uniform(r1, a))
    task = (str(a) + " * " + str(b) + "=?")
    ui.task.setText(str(task))
    global c
    c = int(a * b)
    c = str(c)
    ui.answer.setDisabled(False)
    ui.Next.setEnabled(False)
    ui.label.setText(' ')
    ui.addition.setStyleSheet("background-color:lightgreen")
    ui.subtraction.setStyleSheet("background-color:lightgreen")
    ui.multiplication.setStyleSheet("background-color:green")
    ui.division.setStyleSheet("background-color:lightgreen")
    ui.addition.setDisabled(False)
    ui.subtraction.setDisabled(False)
    ui.multiplication.setDisabled(True)
    ui.division.setDisabled(False)
    return int(c)


def division():
    r1 = int(2)
    r2 = int(10)
    a = int(random.uniform(r1, r2))
    b = int(random.uniform(r1, r2))
    z = b * a
    task = (str(z) + "/" + str(b) + "=?")
    ui.task.setText(str(task))
    global c
    c = int(a)
    c = str(c)
    ui.answer.setDisabled(False)
    ui.Next.setEnabled(False)
    ui.label.setText(' ')
    ui.addition.setStyleSheet("background-color:lightgreen")
    ui.subtraction.setStyleSheet("background-color:lightgreen")
    ui.multiplication.setStyleSheet("background-color:lightgreen")
    ui.division.setStyleSheet("background-color:green")
    ui.addition.setDisabled(False)
    ui.subtraction.setDisabled(False)
    ui.multiplication.setDisabled(False)
    ui.division.setDisabled(True)
    return int(c)


tr = int(1)


def count_tr():
    global tr
    tr = tr + 1


def on_click_ok():
    f = str(ui.answer.text())
    if c == f:
        ui.label.setText('Верно')
        ui.image.setPixmap(QtGui.QPixmap("img\ok.png"))
        ui.answer.setEnabled(False)
        ui.OK.setEnabled(False)
        ui.Next.setEnabled(True)
        ui.true1.setText(str(tr))
        return count_tr()
    else:
        ui.label.setText('Неверно')
        ui.image.setPixmap(QtGui.QPixmap("img\no.png"))
        ui.OK.setEnabled(False)
        ui.Next.setEnabled(True)


def on_click_next():
    ui.answer.setEnabled(True)
    ui.Next.setEnabled(False)
    ui.label.setText(' ')
    ui.answer.setText('')
    ui.image.setText(' ')
    if '+' in ui.task.text():
        return addition()
    elif '-' in ui.task.text():
        return subtraction()
    elif '*' in ui.task.text():
        return multiplication()
    elif '/' in ui.task.text():
        return division()


def clear():
    ui.answer.setText('')
    ui.image.setText(' ')


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    dashboard = QtWidgets.QMainWindow()
    ui = Ui_dashboard()
    ui.setupUi(dashboard)
    dashboard.show()
    sys.exit(app.exec_())
